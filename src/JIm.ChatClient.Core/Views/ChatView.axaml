<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:JIm.ChatClient.Core.ViewModels"
             xmlns:models="using:JIm.ChatClient.Core.Models"
             xmlns:md="https://github.com/AIDotNet/Markdown.AIRender"
             xmlns:views="using:JIm.ChatClient.Core.Views"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="600"
             x:Class="JIm.ChatClient.Core.Views.ChatView"
             x:DataType="vm:MainViewModel">

  <Grid ColumnDefinitions="300,*">
    <!-- 侧边栏 -->
    <Border Grid.Column="0" 
            Background="#2D2D2D"
            Padding="10"
            IsVisible="{Binding CurrentView, Converter={StaticResource ViewTypeEqualityConverter}, ConverterParameter=Chat}"> 
      <Grid RowDefinitions="Auto,Auto,*,Auto">
      
    <!--新对话按钮和知识库按钮并排-->
        <Grid Grid.Row="0" ColumnDefinitions="*,Auto" Margin="0,0,0,10">
          <Button Grid.Column="0"
                  Content="开始新对话"
                  Command="{Binding ClearChatCommand}"
                  HorizontalAlignment="Stretch"
                  Padding="10"
                  Margin="0,0,5,0"
                  Background="#4285F4"
                  Foreground="White"
                  CornerRadius="8"/>
        </Grid>
        
     <!--知识库视图 - 使用单独的行-->
        <CheckBox Grid.Row="1" IsChecked="{Binding IsKnowledgeBaseEnabled}" Content="启用知识库" />
        <!--<Expander Grid.Row="1" 
                  Header="知识库" 
                  IsExpanded="False" 
                  Margin="0,0,0,10"
                  Background="#333333"
                  BorderBrush="#444444"
                  BorderThickness="1"
                  CornerRadius="4">
                  <ScrollViewer MaxHeight="200" 
                        VerticalScrollBarVisibility="Auto"
                        HorizontalScrollBarVisibility="Disabled">
            <views:KnowledgeBaseView DataContext="{Binding}" />
          </ScrollViewer>
        </Expander>-->
        
     <!--历史记录列表--> 
        <ListBox Grid.Row="2"
                 Background="Transparent"
                 Margin="0,0,0,10"
                 ItemsSource="{Binding ChatSessions}"
                 SelectedItem="{Binding SelectedSession}">
          <ListBox.ItemTemplate>
            <DataTemplate>
              <StackPanel>
                <TextBlock Text="{Binding Title}" 
                          Foreground="White"
                          TextTrimming="CharacterEllipsis"/>
                <TextBlock Text="{Binding ModifyTime, StringFormat={}{0:MM-dd HH:mm}}"
                          Foreground="Gray"
                          FontSize="10"
                          Margin="0,2,0,0"/>
              </StackPanel>
            </DataTemplate>
          </ListBox.ItemTemplate>
        </ListBox>
        
     <!--底部信息--> 
        <StackPanel Grid.Row="3" Margin="0,0,0,0">
          <TextBlock Text="Jim AI" Foreground="White" HorizontalAlignment="Center"/>
          <TextBlock Text="版本 1.0.0" Foreground="Gray" FontSize="12" HorizontalAlignment="Center"/>
        </StackPanel>
      </Grid>
    </Border>
    
     <!--聊天区域--> 
    <Grid Grid.Column="1" RowDefinitions="*,Auto,Auto" IsVisible="{Binding CurrentView, Converter={StaticResource ViewTypeEqualityConverter}, ConverterParameter=Chat}">
     <!--聊天历史区域--> 
      <ScrollViewer Grid.Row="0" 
                    Name="ChatScrollViewer"
                    HorizontalScrollBarVisibility="Disabled"
                    VerticalScrollBarVisibility="Auto">
        <ItemsControl ItemsSource="{Binding Messages}">
          <ItemsControl.ItemTemplate>
            <DataTemplate DataType="models:ChatMessage">
              <Border Margin="10" 
                      Padding="15" 
                      CornerRadius="8"
                      Background="{Binding Role, Converter={StaticResource RoleToBackgroundConverter}}">
                <StackPanel>
                  <Grid ColumnDefinitions="Auto,*,Auto" 
                        Margin="0,0,0,10" 
                        VerticalAlignment="Center">
                    
                  <!--角色图标--> 
                    <Border Grid.Column="0" 
                            Width="32" 
                            Height="32" 
                            CornerRadius="16" 
                            Background="{Binding Role, Converter={StaticResource RoleToAvatarBackgroundConverter}}"
                            Margin="0,0,10,0">
                      <TextBlock Text="{Binding Role, Converter={StaticResource RoleToAvatarTextConverter}}"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 FontWeight="Bold"/>
                    </Border>
                    
                  <!--角色名称--> 
                    <TextBlock Grid.Column="1" 
                               Text="{Binding Role, Converter={StaticResource RoleToDisplayNameConverter}}"
                               FontWeight="Bold"
                               VerticalAlignment="Center"
                               Margin="0,0,0,5"/>
                    
                    <TextBlock Grid.Column="2" 
                               Text="{Binding Timestamp, StringFormat=\{0:HH:mm\}}"
                               Opacity="0.6"
                               FontSize="12"/>
                  </Grid>
                  
                <!--消息内容 - 使用 Markdown 渲染--> 
                  <md:MarkdownRender Value="{Binding Content}" />
                    
                <!--流式输出指示器--> 
                  <Border IsVisible="{Binding IsStreaming}"
                          Width="10"
                          Height="10"
                          CornerRadius="5"
                          Background="#4CAF50"
                          HorizontalAlignment="Left"
                          Margin="42,5,0,0">
                    <Border.Styles>
                      <Style Selector="Border">
                        <Style.Animations>
                          <Animation Duration="0:0:1" IterationCount="INFINITE">
                            <KeyFrame Cue="0%">
                              <Setter Property="Opacity" Value="1.0"/>
                            </KeyFrame>
                            <KeyFrame Cue="50%">
                              <Setter Property="Opacity" Value="0.3"/>
                            </KeyFrame>
                            <KeyFrame Cue="100%">
                              <Setter Property="Opacity" Value="1.0"/>
                            </KeyFrame>
                          </Animation>
                        </Style.Animations>
                      </Style>
                    </Border.Styles>
                  </Border>
                  
            <!--添加复制按钮 - 仅在AI回复消息中显示--> 
                  <Button IsVisible="{Binding Role, Converter={StaticResource RoleIsAssistantConverter}}"
                          Content="复制"
                          Command="{Binding $parent[ItemsControl].DataContext.CopyMessageCommand}"
                          CommandParameter="{Binding Content}"
                          HorizontalAlignment="Right"
                          Margin="0,5,0,0"
                          Padding="8,4"
                          Background="Transparent"
                          Foreground="#4285F4"
                          BorderThickness="1"
                          BorderBrush="#DDDDDD"
                          CornerRadius="4"
                          FontSize="12"/>
                </StackPanel>
              </Border>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </ScrollViewer>

     <!--模型选择区域--> 
      <Border Grid.Row="1" 
              VerticalAlignment="Bottom"
              Margin="10,0,10,5"
              Padding="10,5"
              Background="#34F5F5F5"
              CornerRadius="8"
              BorderBrush="#DDDDDD"
              BorderThickness="1">
        <Grid ColumnDefinitions="Auto,*,Auto">
          <TextBlock Grid.Column="0" 
                     Text="选择模型："
                     VerticalAlignment="Center"
                     Margin="0,0,10,0"/>
          <ComboBox Grid.Column="1"
                    ItemsSource="{Binding AvailableModels}"
                    SelectedItem="{Binding SelectedModel}"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Stretch">
            <ComboBox.ItemTemplate>
              <DataTemplate>
                <TextBlock Text="{Binding DisplayName}"/>
              </DataTemplate>
            </ComboBox.ItemTemplate>
          </ComboBox>
          
     <!--添加联网图标按钮--> 
          <Button Grid.Column="2"
                  Command="{Binding ToggleInternetCommand}"
                  Margin="10,0,0,0"
                  Padding="8"
                  HorizontalAlignment="Right"
                  Background="Transparent"
                  ToolTip.Tip="联网访问">
            <PathIcon Data="M16.36,14C16.44,13.34 16.5,12.68 16.5,12C16.5,11.32 16.44,10.66 16.36,10H19.74C19.9,10.64 20,11.31 20,12C20,12.69 19.9,13.36 19.74,14M14.59,19.56C15.19,18.45 15.65,17.25 15.97,16H18.92C17.96,17.65 16.43,18.93 14.59,19.56M14.34,14H9.66C9.56,13.34 9.5,12.68 9.5,12C9.5,11.32 9.56,10.65 9.66,10H14.34C14.43,10.65 14.5,11.32 14.5,12C14.5,12.68 14.43,13.34 14.34,14M12,19.96C11.17,18.76 10.5,17.43 10.09,16H13.91C13.5,17.43 12.83,18.76 12,19.96M8,8H5.08C6.03,6.34 7.57,5.06 9.4,4.44C8.8,5.55 8.35,6.75 8,8M5.08,16H8C8.35,17.25 8.8,18.45 9.4,19.56C7.57,18.93 6.03,17.65 5.08,16M4.26,14C4.1,13.36 4,12.69 4,12C4,11.31 4.1,10.64 4.26,10H7.64C7.56,10.66 7.5,11.32 7.5,12C7.5,12.68 7.56,13.34 7.64,14M12,4.03C12.83,5.23 13.5,6.57 13.91,8H10.09C10.5,6.57 11.17,5.23 12,4.03M18.92,8H15.97C15.65,6.75 15.19,5.55 14.59,4.44C16.43,5.07 17.96,6.34 18.92,8M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z">
              <PathIcon.Styles>
                <Style Selector="PathIcon">
                  <Setter Property="Foreground" Value="{Binding IsInternetEnabled, Converter={StaticResource BoolToColorConverter}, ConverterParameter=#4285F4;#CCCCCC}"/>
                </Style>
              </PathIcon.Styles>
            </PathIcon>
          </Button>
        </Grid>
      </Border>
      
     <!--输入区域--> 
      <Grid Grid.Row="2" ColumnDefinitions="Auto,*,Auto" Margin="10">
        <Button Grid.Column="0" 
                Command="{Binding UploadFileCommand}"
                IsEnabled="{Binding !IsProcessing}"
                Margin="0,0,10,0"
                Padding="10"
                ToolTip.Tip="上传文件">
          <PathIcon Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" Width="16" Height="16"/>
        </Button>
        
        <Border Grid.Column="1" 
                BorderBrush="#CCCCCC" 
                BorderThickness="1" 
                CornerRadius="8"
                Padding="10">
          <TextBox Text="{Binding UserInput}" 
                   Watermark="输入消息..." 
                   BorderThickness="0"
                   Background="Transparent"
                   AcceptsReturn="True"
                   TextWrapping="Wrap"
                   MaxHeight="150">
            <TextBox.Styles>
              <Style Selector="TextBox">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="Transparent"/>
              </Style>
              <Style Selector="TextBox:focus /template/ Border#PART_BorderElement">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="Transparent"/>
              </Style>
            </TextBox.Styles>
          </TextBox>
        </Border>
        
        <Button Grid.Column="2" 
                Content="发送" 
                Command="{Binding SendMessageCommand}"
                IsEnabled="{Binding CanSendMessage}"
                Margin="10,0,0,0"
                Padding="15,10"
                Background="#4285F4"
                Foreground="White"
                CornerRadius="8"/>
      </Grid>

     <!--Toast通知组件顶部显示--> 
      <Border Name="ToastNotification"
              IsVisible="False"
              Background="#FF9800"
              CornerRadius="4"
              Padding="12,8"
              HorizontalAlignment="Center"
              VerticalAlignment="Top"
              Margin="0,20,0,0"
              Grid.Row="0">
          <TextBlock Name="ToastText"
                     Foreground="White"
                     TextAlignment="Center"/>
      </Border>
    </Grid>
  </Grid>
</UserControl> 